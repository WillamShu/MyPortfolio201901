@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
<form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
    <ul class="nav navbar-nav navbar-right">
        <li class="nav-item active">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item active">
            <a class="nav-link" href="javascript:sessionStorage.removeItem('accessToken');$('#logoutForm').submit();">Log off</a>
            @*<a class="nav-link" asp-area="Identity" asp-page="/Account/Logout">Logout</a>*@
        </li>
    </ul>
</form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li class="nav-item active">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item active">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    </ul>
}
